<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>AWS on Random Stuff From My Head</title><link>https://neilarmitage.com/tags/aws/</link><description>Recent content in AWS on Random Stuff From My Head</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>neil@neilarmitage.com (Neil Armitage)</managingEditor><webMaster>neil@neilarmitage.com (Neil Armitage)</webMaster><lastBuildDate>Fri, 02 Dec 2022 12:44:02 +0000</lastBuildDate><atom:link href="https://neilarmitage.com/tags/aws/index.xml" rel="self" type="application/rss+xml"/><item><title>Setting up AWS Transit Gateway with Terraform</title><link>https://neilarmitage.com/posts/aws_transit_gateway_with_terraform/</link><pubDate>Fri, 02 Dec 2022 12:44:02 +0000</pubDate><author>neil@neilarmitage.com (Neil Armitage)</author><guid>https://neilarmitage.com/posts/aws_transit_gateway_with_terraform/</guid><description>Transit Gateway allows VPC&amp;rsquo;s to be connected together into a single network as well as connecting to on-prem networks.
This example will deploy a simple setup with 2 VPC&amp;rsquo;s being connected together.
The Terraform code can be found on GitHub. The code also includes a RAM (Resource Access Manager) share for linking VPC&amp;rsquo;s in separate accounts but in this examples it&amp;rsquo;s not used.
Just update any the reqruired settings in variables.</description></item><item><title>Setting up AWS VPN</title><link>https://neilarmitage.com/posts/setting_up_aws_vpn/</link><pubDate>Thu, 01 Dec 2022 12:43:03 +0000</pubDate><author>neil@neilarmitage.com (Neil Armitage)</author><guid>https://neilarmitage.com/posts/setting_up_aws_vpn/</guid><description>This example will deploy a VPN into an AWS VPC and show how to connect to it using OpenVPN from either a Mac or Linux host. It will use Certificates for authentication, many other authentication options are available.
Terraform source code can be found at Github
If will deploy a simple VPC in one AZ and then create a VPN, the required certificates for the VPN will be stored in AWS Parameter Store.</description></item><item><title>Avoiding pain when operating in the Cloud</title><link>https://neilarmitage.com/posts/2022-09-14-cloudopen-europe-2022/</link><pubDate>Wed, 14 Sep 2022 06:30:08 +0000</pubDate><author>neil@neilarmitage.com (Neil Armitage)</author><guid>https://neilarmitage.com/posts/2022-09-14-cloudopen-europe-2022/</guid><description>I will be Speaking at the Open Source Summit Europe 2022 in Dublin
The slides can be found on SpeakerDeck.</description></item><item><title>Kubernetes Backup with Velero</title><link>https://neilarmitage.com/posts/2022-07-29-k8s-backup-with-velero/</link><pubDate>Fri, 29 Jul 2022 10:14:08 +0000</pubDate><author>neil@neilarmitage.com (Neil Armitage)</author><guid>https://neilarmitage.com/posts/2022-07-29-k8s-backup-with-velero/</guid><description>Velero is an open source tool to safely backup and restore, perform disaster recovery, and migrate Kubernetes cluster resources and persistent volumes. It can be setup quickly with Terraform on a EKS cluster and is simple to operate.
An example deployment including EKS can be cloned from here
Installation via Terraform resource &amp;#34;aws_s3_bucket&amp;#34; &amp;#34;velero&amp;#34; { bucket = &amp;#34;eks-velero-backup-${var.environment_name}&amp;#34; acl = &amp;#34;private&amp;#34; server_side_encryption_configuration { rule { apply_server_side_encryption_by_default { sse_algorithm = &amp;#34;AES256&amp;#34; } } } versioning { enabled = true } } resource &amp;#34;aws_s3_bucket_policy&amp;#34; &amp;#34;velero&amp;#34; { bucket = aws_s3_bucket.</description></item><item><title>Installing Karpenter</title><link>https://neilarmitage.com/posts/2022-05-12-karpenter/</link><pubDate>Thu, 12 May 2022 08:11:08 +0000</pubDate><author>neil@neilarmitage.com (Neil Armitage)</author><guid>https://neilarmitage.com/posts/2022-05-12-karpenter/</guid><description>Karpenter automatically launches just the right compute resources to handle your cluster&amp;rsquo;s applications. It is designed to let you take full advantage of the cloud with fast and simple compute provisioning for Kubernetes clusters. It is a replacement for the Cluster Autoscaler which has some issues in AWS
This at the moment this example does not work on an acloudguru sandbox account. The supporting files can be found on Github</description></item><item><title>Basic EKS Cluster with Cluster Autoscaler</title><link>https://neilarmitage.com/posts/2022-05-11-basic-eks-cluster/</link><pubDate>Wed, 11 May 2022 10:38:08 +0000</pubDate><author>neil@neilarmitage.com (Neil Armitage)</author><guid>https://neilarmitage.com/posts/2022-05-11-basic-eks-cluster/</guid><description>EKSCTL can be used to quickly deploy a AWS EKS Cluster.
This is based on using a sandbox AWS account The supporting files can be found on Github
Create an EKS deployment file, I tend to create individual nodegroups dedicated to a single AZ
[cloudshell-user@ip-10-1-181-252 cluster-autoscaler]$ cat ca-cluster.yaml --- apiVersion: eksctl.io/v1alpha5 kind: ClusterConfig metadata: name: ca-cluster --- apiVersion: eksctl.io/v1alpha5 kind: ClusterConfig metadata: name: ca-cluster region: us-east-1 version: &amp;#34;1.22&amp;#34; availabilityZones: [&amp;#34;us-east-1a&amp;#34;, &amp;#34;us-east-1b&amp;#34;, &amp;#34;us-east-1c&amp;#34;] managedNodeGroups: - name: nodegroupA desiredCapacity: 1 availabilityZones: [&amp;#34;us-east-1a&amp;#34;] instanceType: t3.</description></item><item><title>EKS with Cilium in chaining mode</title><link>https://neilarmitage.com/posts/2022-05-11-cilium-chaining/</link><pubDate>Wed, 11 May 2022 10:38:08 +0000</pubDate><author>neil@neilarmitage.com (Neil Armitage)</author><guid>https://neilarmitage.com/posts/2022-05-11-cilium-chaining/</guid><description>Cilium can run in chaining mode which allows it to run alongside the AWS-CNI plugin.
This is based on using a sandbox AWS account The supporting files can be found on Github
Install some extra tools
curl -L --remote-name-all https://github.com/cilium/cilium-cli/releases/latest/download/cilium-linux-amd64.tar.gz{,.sha256sum} sha256sum --check cilium-linux-amd64.tar.gz.sha256sum sudo tar xzvfC cilium-linux-amd64.tar.gz /usr/local/bin rm cilium-linux-amd64.tar.gz{,.sha256sum} export HUBBLE_VERSION=$(curl -s https://raw.githubusercontent.com/cilium/hubble/master/stable.txt) curl -L --remote-name-all https://github.com/cilium/hubble/releases/download/$HUBBLE_VERSION/hubble-linux-amd64.tar.gz{,.sha256sum} sha256sum --check hubble-linux-amd64.tar.gz.sha256sum sudo tar xzvfC hubble-linux-amd64.tar.gz /usr/local/bin rm hubble-linux-amd64.tar.gz{,.sha256sum} Deploy an EKS Cluster</description></item></channel></rss>